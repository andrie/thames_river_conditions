---
title: "River conditions"
date: now
date-format: "YYYY-MM-DD HH:mm:ssZ"
toc: false
echo: false
jupyter: python3
reference-location: margin
format: 
    html:
        theme: lumen
        font-size: 0.8em
---

```{python}
#| echo: false

import hcc
df = hcc.scrape_conditions()

```


```{python}
import great_tables as gt
from great_tables import style, loc
import re
dat = df[df["Local"] == "Local"]
# dat = df
dat = dat.drop('Local', axis = 1)
cond = dat["Current conditions"].values

reds = []
for i, val in enumerate(cond):
    match = re.search("^(Red.*)$", val)
    if match:
        reds.append(i)

yellows = []
for i, val in enumerate(cond):
    match = re.search("^(Yellow.*)$", val)
    if match:
        yellows.append(i)

(
    gt.GT(dat)
    .tab_style(
        style=style.fill(color="#E21637"),
        locations=loc.body(columns="Current conditions", rows=reds)
    )
    .tab_style(
        style=style.fill(color="#FFCD5E"),
        locations=loc.body(columns="Current conditions", rows=yellows)
    )
)
```


```{python}
# hcc.plot_thames_level("Walton", parameter = "flow")


import hcc
from importlib import reload
reload(hcc)

# compute today - 7 days

walton   = hcc.get_rates("Walton",   parameter = "flow", limit = 1).loc[:, ["dateTime", "value"]]
kingston = hcc.get_rates("Kingston", parameter = "flow", limit = 1).loc[:, ["dateTime", "value"]]

import pandas as pd

# combine walton and kingston into rows of a pandas dataframe
stations = ["Walton", "Kingston"]
flow = [walton.iloc[0]["value"], kingston.iloc[0]["value"]]

# round flow to zero digits
flow = [round(x, 0) for x in flow]

# concatenate stations and flow into a dataframe
df = pd.DataFrame({"Station": stations, "Flow (cumec)": flow})

gt.GT(df)



```


